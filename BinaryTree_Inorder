import java.util.*;

class TreeNode {
  int data;
  TreeNode left, right;

  public TreeNode(int item) {
    data = item;
    left = right = null;
  }
}

class BinaryTree {
  private TreeNode root;
  public BinaryTree() {
    root = null;
  }

  private TreeNode insert(TreeNode root, int data) {
    if (root == null) {
      root = new TreeNode(data);
      return root;
    }
    if (data < root.data) {
      root.left = insert(root.left, data);

    } else if (data > root.data) {
      root.right = insert(root.right, data);
    }
    return root;
  }

  public void insert(int data) {
    root = insert(root, data);
  }

  private void inOrderTraversal(TreeNode root) {
    if (root != null) {
      inOrderTraversal(root.left);
      System.out.println(root.data + " ");
      inOrderTraversal(root.right);
    }
  }

  public void inOrderTraversal() {
    System.out.println("In-order traversal: ");
    inOrderTraversal(root);
    System.out.println();
  }

  private TreeNode delete(TreeNode root, int data) {
    if (root == null) {
      return root;
    }
    if (data < root.data) {
      root.left = delete(root.left, data);

    } else if (data > root.data) {
      root.right = delete(root.right, data);
    } else {
      if (root.left == null) {
        return root.right;

      } else if (root.right == null) {
        return root.left;
      }

      root.data = minValue(root.right);
      root.right = delete(root.right, root.data);
    }
    return root;
  }

  private int minValue(TreeNode root) {
    int minValue = root.data;
    while (root.left != null) {
      minValue = root.left.data;
      root = root.left;
    }
    return minValue;
  }

  public void delete(int data) {
    root = delete(root, data);
  }
  public static void main(String[] args) {
    BinaryTree binaryTree = new BinaryTree();
    Scanner scanner = new Scanner(System.in);

    int choice;

    do {
      System.out.println("\n--- Binary Tree Menu ---");
      System.out.println("1. Insert");
      System.out.println("2. In-order Traversal");
      System.out.println("3. Delete");
      System.out.println("4. Exit");

      System.out.print("Enter your choice: ");

      choice = scanner.nextInt();

      switch (choice) {
        case 1:
          System.out.print("Enter value to insert: ");
          int value = scanner.nextInt();
          binaryTree.insert(value);
          break;
        case 2:
          binaryTree.inOrderTraversal();
          break;
        case 3:
          System.out.print("Enter value to delete: ");
          int valueToDelete = scanner.nextInt();
          binaryTree.delete(valueToDelete);
          break;
        case 4:
          System.out.println("Exiting program..");
          break;
        default:
          System.out.println("Invalid choice.");
      }

    } while (choice != 4);

    scanner.close();
  }
}
